{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sartre\\\\Desktop\\\\starter-files\\\\src\\\\HelloWorld.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { helloWorldContract, connectWallet, updateMessage, loadCurrentMessage, getCurrentWalletConnected } from \"./util/interact.js\";\nimport alchemylogo from \"./alchemylogo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HelloWorld = () => {\n  _s();\n  //state variables\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [message, setMessage] = useState(\"No connection to the network.\"); //default message\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  //called only once\n  useEffect(() => {\n    async function fetchMessage() {\n      const message = await loadCurrentMessage();\n      setMessage(message);\n    }\n    fetchMessage();\n  }, []);\n  function addSmartContractListener() {//TODO: implement\n  }\n  function addWalletListener() {//TODO: implement\n  }\n  const connectWalletPressed = async () => {//TODO: implement\n  };\n  const onUpdatePressed = async () => {//TODO: implement\n  };\n\n  //the UI of our component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"logo\",\n      src: alchemylogo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"walletButton\",\n      onClick: connectWalletPressed,\n      children: walletAddress.length > 0 ? \"Connected: \" + String(walletAddress).substring(0, 6) + \"...\" + String(walletAddress).substring(38) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        paddingTop: \"50px\"\n      },\n      children: \"Current Message:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        paddingTop: \"18px\"\n      },\n      children: \"New Message:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Update the message in your smart contract.\",\n        onChange: e => setNewMessage(e.target.value),\n        value: newMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"publish\",\n        onClick: onUpdatePressed,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(HelloWorld, \"Gq/QBHQMC3uFvf9JJRa28vw0vHw=\");\n_c = HelloWorld;\nexport default HelloWorld;\nvar _c;\n$RefreshReg$(_c, \"HelloWorld\");","map":{"version":3,"names":["React","useEffect","useState","helloWorldContract","connectWallet","updateMessage","loadCurrentMessage","getCurrentWalletConnected","alchemylogo","jsxDEV","_jsxDEV","HelloWorld","_s","walletAddress","setWallet","status","setStatus","message","setMessage","newMessage","setNewMessage","fetchMessage","addSmartContractListener","addWalletListener","connectWalletPressed","onUpdatePressed","id","children","src","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","String","substring","style","paddingTop","type","placeholder","onChange","e","target","value","_c","$RefreshReg$"],"sources":["C:/Users/Sartre/Desktop/starter-files/src/HelloWorld.js"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nimport {\n  helloWorldContract,\n  connectWallet,\n  updateMessage,\n  loadCurrentMessage,\n  getCurrentWalletConnected,\n} from \"./util/interact.js\";\n\n\nimport alchemylogo from \"./alchemylogo.svg\";\n\nconst HelloWorld = () => {\n  //state variables\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [message, setMessage] = useState(\"No connection to the network.\"); //default message\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  //called only once\n    useEffect(() => {\n        async function fetchMessage() {\n            const message = await loadCurrentMessage();\n            setMessage(message);\n        }\n        fetchMessage();\n    }, []);\n\n  function addSmartContractListener() { //TODO: implement\n    \n  }\n\n  function addWalletListener() { //TODO: implement\n    \n  }\n\n  const connectWalletPressed = async () => { //TODO: implement\n    \n  };\n\n  const onUpdatePressed = async () => { //TODO: implement\n    \n  };\n\n  //the UI of our component\n  return (\n    <div id=\"container\">\n      <img id=\"logo\" src={alchemylogo}></img>\n      <button id=\"walletButton\" onClick={connectWalletPressed}>\n        {walletAddress.length > 0 ? (\n          \"Connected: \" +\n          String(walletAddress).substring(0, 6) +\n          \"...\" +\n          String(walletAddress).substring(38)\n        ) : (\n          <span>Connect Wallet</span>\n        )}\n      </button>\n\n      <h2 style={{ paddingTop: \"50px\" }}>Current Message:</h2>\n      <p>{message}</p>\n\n      <h2 style={{ paddingTop: \"18px\" }}>New Message:</h2>\n\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Update the message in your smart contract.\"\n          onChange={(e) => setNewMessage(e.target.value)}\n          value={newMessage}\n        />\n        <p id=\"status\">{status}</p>\n\n        <button id=\"publish\" onClick={onUpdatePressed}>\n          Update\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default HelloWorld;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SACEC,kBAAkB,EAClBC,aAAa,EACbC,aAAa,EACbC,kBAAkB,EAClBC,yBAAyB,QACpB,oBAAoB;AAAC,OAAAC,WAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAK5B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB;EACA,MAAM,CAACC,aAAa,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,+BAA+B,CAAC,CAAC,CAAC;EACzE,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACED,SAAS,CAAC,MAAM;IACZ,eAAeoB,YAAYA,CAAA,EAAG;MAC1B,MAAMJ,OAAO,GAAG,MAAMX,kBAAkB,EAAE;MAC1CY,UAAU,CAACD,OAAO,CAAC;IACvB;IACAI,YAAY,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC;EAER,SAASC,wBAAwBA,CAAA,EAAG,CAAE;EAAA;EAItC,SAASC,iBAAiBA,CAAA,EAAG,CAAE;EAAA;EAI/B,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY,CAAE;EAAA,CAE1C;EAED,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY,CAAE;EAAA,CAErC;;EAED;EACA,oBACEf,OAAA;IAAKgB,EAAE,EAAC,WAAW;IAAAC,QAAA,gBACjBjB,OAAA;MAAKgB,EAAE,EAAC,MAAM;MAACE,GAAG,EAAEpB;IAAY;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eACvCtB,OAAA;MAAQgB,EAAE,EAAC,cAAc;MAACO,OAAO,EAAET,oBAAqB;MAAAG,QAAA,EACrDd,aAAa,CAACqB,MAAM,GAAG,CAAC,GACvB,aAAa,GACbC,MAAM,CAACtB,aAAa,CAAC,CAACuB,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GACrC,KAAK,GACLD,MAAM,CAACtB,aAAa,CAAC,CAACuB,SAAS,CAAC,EAAE,CAAC,gBAEnC1B,OAAA;QAAAiB,QAAA,EAAM;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACrB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACM,eAETtB,OAAA;MAAI2B,KAAK,EAAE;QAAEC,UAAU,EAAE;MAAO,CAAE;MAAAX,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACxDtB,OAAA;MAAAiB,QAAA,EAAIV;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAEhBtB,OAAA;MAAI2B,KAAK,EAAE;QAAEC,UAAU,EAAE;MAAO,CAAE;MAAAX,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAEpDtB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QACE6B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,4CAA4C;QACxDC,QAAQ,EAAGC,CAAC,IAAKtB,aAAa,CAACsB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAC/CA,KAAK,EAAEzB;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAClB,eACFtB,OAAA;QAAGgB,EAAE,EAAC,QAAQ;QAAAC,QAAA,EAAEZ;MAAM;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAE3BtB,OAAA;QAAQgB,EAAE,EAAC,SAAS;QAACO,OAAO,EAAER,eAAgB;QAAAE,QAAA,EAAC;MAE/C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACpB,EAAA,CAnEID,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAqEhB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}